{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Magnus Reeves\\\\Desktop\\\\3313\\\\SE-3313-project-2\\\\client\\\\src\\\\App.js\";\nimport './App.css';\nimport React from 'react';\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"127.0.0.1:3001\";\n\nfunction Message(props) {\n  let messagesHTML = [];\n\n  for (let j = 0; j < props.messages.length; j++) {\n    let containerCss;\n\n    if (props.messages[j].name === props.name) {\n      containerCss = \"containerLeft\";\n    } else {\n      containerCss = \"containerRight\";\n    }\n\n    messagesHTML[j] = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: containerCss,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.messages[j].message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"UserName\",\n          children: [\" \", props.messages[j].name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 27\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: messagesHTML\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this);\n}\n\n_c = Message;\n\nclass App extends React.Component {\n  constructor(props) {\n    super();\n    let message = {\n      name: 'Magnus',\n      message: 'I hate css'\n    };\n    this.state = {\n      socket: io(ENDPOINT),\n      messages: new Array(),\n      message: '',\n      name: ''\n    };\n    this.SendMessage = this.SendMessage.bind(this);\n    this.InputOnChange = this.InputOnChange.bind(this);\n  }\n\n  InputOnChange(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  SendMessage() {\n    this.state.socket.emit('SendMessage', {\n      messae: this.state.message,\n      name: this.state.name\n    });\n    this.setState({\n      message: ''\n    });\n  }\n\n  componentDidMount() {\n    this.state.socket.on('NewMessage', data => {\n      this.setState({\n        messages: data\n      });\n    });\n  }\n\n  render() {\n    let messages = /*#__PURE__*/_jsxDEV(\"a\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 24\n    }, this);\n\n    console.log(this.state.messages);\n\n    if (this.state.messages.length !== 0) {\n      messages = /*#__PURE__*/_jsxDEV(Message, {\n        messages: this.state.messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 24\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [messages, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.name,\n            onChange: this.InputOnChange,\n            type: \"text\",\n            placeholder: \"Enter Username\",\n            name: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"entry\",\n            onClick: () => this.SendMessage(),\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["C:/Users/Magnus Reeves/Desktop/3313/SE-3313-project-2/client/src/App.js"],"names":["React","io","ENDPOINT","Message","props","messagesHTML","j","messages","length","containerCss","name","message","App","Component","constructor","state","socket","Array","SendMessage","bind","InputOnChange","event","setState","target","value","emit","messae","componentDidMount","on","data","render","console","log"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport io from \"socket.io-client\";\nconst ENDPOINT = \"127.0.0.1:3001\";\n\n\nfunction Message(props){\n    let messagesHTML = []; \n\n    for(let j = 0; j < props.messages.length; j++){ \n        let containerCss;\n\n        if(props.messages[j].name === props.name){\n            containerCss = \"containerLeft\"\n        }\n        else{\n            containerCss = \"containerRight\"\n        }\n\n        messagesHTML[j] = <div className = {containerCss}>\n                            <div className = \"message\">\n                                <p>{props.messages[j].message}</p>\n                                <span className = \"UserName\"> {props.messages[j].name} </span>\n                            </div>\n                    </div>\n    }\n    \n    return (<div className = \"board\"> \n               {messagesHTML}\n           </div> \n    )\n}\n\n\nclass App extends React.Component {\n    constructor(props){\n        super()\n\n        let message = {\n            name: 'Magnus',\n            message: 'I hate css',\n        }\n\n\n        this.state = {\n            socket: io(ENDPOINT),\n            messages: new Array(),\n            message: '',\n            name: ''\n        }\n\n        this.SendMessage = this.SendMessage.bind(this)\n        this.InputOnChange = this.InputOnChange.bind(this)\n    }\n\n    InputOnChange(event){\n        this.setState({\n            name: event.target.value,\n        })     \n    }\n\n    SendMessage(){\n        this.state.socket.emit('SendMessage', ({messae: this.state.message, name: this.state.name}))\n        \n        this.setState({\n            message: ''\n        })\n    }\n\n    componentDidMount(){\n        this.state.socket.on('NewMessage', (data) => {\n            this.setState({\n                messages: data\n            })\n        })\n    }\n\n    render(){\n        let messages = <a>Loading</a>\n        console.log(this.state.messages)\n        if(this.state.messages.length !== 0){\n            messages = <Message messages = {this.state.messages}></Message>\n        }\n\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                </header>\n                    <div>\n                        {messages}\n                        <div>\n                            <input value = {this.state.name} onChange={this.InputOnChange} type=\"text\" placeholder=\"Enter Username\" name=\"username\" />\n                            <button className = 'entry' onClick = {() => this.SendMessage()}>Send</button> \n                        </div>\n                </div>\n            </div>\n        );  \n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}